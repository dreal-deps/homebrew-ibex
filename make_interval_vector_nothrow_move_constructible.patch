diff --git a/src/arithmetic/ibex_IntervalVector.cpp b/src/arithmetic/ibex_IntervalVector.cpp
index 4318a17f..1ea06ac7 100644
--- a/src/arithmetic/ibex_IntervalVector.cpp
+++ b/src/arithmetic/ibex_IntervalVector.cpp
@@ -46,6 +46,12 @@ IntervalVector::IntervalVector(int n1, double bounds[][2]) : n(n1), vec(new Inte
 			vec[i]=Interval(bounds[i][0],bounds[i][1]);
 }
 
+#if defined __cplusplus && __cplusplus >= 201103L
+IntervalVector::IntervalVector(IntervalVector&& x) noexcept : n(x.n), vec(x.vec) {
+        x.vec = nullptr;
+}
+#endif
+
 IntervalVector::IntervalVector(const Vector& x) : n(x.size()), vec(new Interval[n]) {
 	for (int i=0; i<n; i++) vec[i]=x[i];
 }
diff --git a/src/arithmetic/ibex_IntervalVector.h b/src/arithmetic/ibex_IntervalVector.h
index 7841d2a7..dcc9acf1 100644
--- a/src/arithmetic/ibex_IntervalVector.h
+++ b/src/arithmetic/ibex_IntervalVector.h
@@ -59,6 +59,13 @@ public:
 	 */
 	IntervalVector(const IntervalVector& x);
 
+#if defined __cplusplus && __cplusplus >= 201103L
+	/**
+	 * \brief Move constructor
+	 */
+	IntervalVector(IntervalVector&& x) noexcept;
+#endif
+
 	/**
 	 * \brief Create the IntervalVector [bounds[0][0],bounds[0][1]]x...x[bounds[n-1][0],bounds[n-1][1]]
 	 *
